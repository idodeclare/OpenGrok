/*	|1
*	|1
cddl	|1
header	|1
start	|1
*	|1
*	|1
the	|1
contents	|1
of	|1
this	|1
file	|1
are	|1
subject	|1
to	|1
the	|1
terms	|1
of	|1
the	|1
*	|1
common	|1
development	|1
and	|1
distribution	|1
license	|1
license,	|0
version	|1
1	|1
1.0	|0
0	|1
only	|1
*	|1
(the	|1
the	|0
"license	|1
"license"	|0
"license")	|0
"license").	|0
license	|0
license"	|0
license")	|0
license").	|0
you	|1
may	|1
not	|1
use	|1
this	|1
file	|1
except	|1
in	|1
compliance	|1
*	|1
with	|1
the	|1
license	|1
license.	|0
*	|1
*	|1
you	|1
can	|1
obtain	|1
a	|1
copy	|1
of	|1
the	|1
license	|1
at	|1
usr	|1
usr/	|0
usr/src	|0
usr/src/	|0
usr/src/opensolaris	|0
usr/src/opensolaris.license	|0
src	|1
src/	|0
src/opensolaris	|0
src/opensolaris.license	|0
opensolaris	|1
opensolaris.license	|0
license	|1
*	|1
or	|1
http	|1
http://	|0
http://www	|0
http://www.opensolaris	|0
http://www.opensolaris.org	|0
http://www.opensolaris.org/	|0
http://www.opensolaris.org/os	|0
http://www.opensolaris.org/os/	|0
http://www.opensolaris.org/os/licensing	|0
http://www.opensolaris.org/os/licensing.	|0
www	|1
www.opensolaris	|0
www.opensolaris.org	|0
www.opensolaris.org/	|0
www.opensolaris.org/os	|0
www.opensolaris.org/os/	|0
www.opensolaris.org/os/licensing	|0
www.opensolaris.org/os/licensing.	|0
opensolaris	|1
opensolaris.org	|0
opensolaris.org/	|0
opensolaris.org/os	|0
opensolaris.org/os/	|0
opensolaris.org/os/licensing	|0
opensolaris.org/os/licensing.	|0
org	|1
org/	|0
org/os	|0
org/os/	|0
org/os/licensing	|0
org/os/licensing.	|0
os	|1
os/	|0
os/licensing	|0
os/licensing.	|0
licensing	|1
licensing.	|0
*	|1
see	|1
the	|1
license	|1
for	|1
the	|1
specific	|1
language	|1
governing	|1
permissions	|1
*	|1
and	|1
limitations	|1
under	|1
the	|1
license	|1
license.	|0
*	|1
*	|1
when	|1
distributing	|1
covered	|1
code	|1
code,	|0
include	|1
this	|1
cddl	|1
header	|1
in	|1
each	|1
*	|1
file	|1
and	|1
include	|1
the	|1
license	|1
file	|1
at	|1
usr	|1
usr/	|0
usr/src	|0
usr/src/	|0
usr/src/opensolaris	|0
usr/src/opensolaris.license	|0
usr/src/opensolaris.license.	|0
src	|1
src/	|0
src/opensolaris	|0
src/opensolaris.license	|0
src/opensolaris.license.	|0
opensolaris	|1
opensolaris.license	|0
opensolaris.license.	|0
license	|1
license.	|0
*	|1
if	|1
applicable	|1
applicable,	|0
add	|1
the	|1
following	|1
below	|1
this	|1
cddl	|1
header	|1
header,	|0
with	|1
the	|1
*	|1
fields	|1
enclosed	|1
by	|1
brackets	|1
"[	|1
"[]	|0
"[]"	|0
[]	|0
[]"	|0
replaced	|1
with	|1
your	|1
own	|1
identifying	|1
*	|1
information	|1
information:	|0
portions	|1
copyright	|1
[yyyy	|1
[yyyy]	|0
yyyy	|0
yyyy]	|0
[name	|1
name	|0
of	|1
copyright	|1
owner	|1
owner]	|0
*	|1
*	|1
cddl	|1
header	|1
end	|1
*/	|1
/*	|1
*	|1
copyright	|1
2004	|1
sun	|1
microsystems	|1
microsystems,	|0
inc	|1
inc.	|0
all	|1
rights	|1
reserved	|1
reserved.	|0
*	|1
use	|1
is	|1
subject	|1
to	|1
license	|1
terms	|1
terms.	|0
*/	|1
#pragma	|1
pragma	|0
ident	|1
"%	|1
"%z	|0
"%z%%	|0
"%z%%m	|0
"%z%%m%	|0
%z	|0
%z%%	|0
%z%%m	|0
%z%%m%	|0
z	|0
z%%	|0
z%%m	|0
z%%m%	|0
m	|1
m%	|0
%i	|1
%i%	|0
i	|0
i%	|0
%e	|1
%e%	|0
e	|0
e%	|0
smi	|1
smi"	|0
#include	|1
include	|0
<sys	|1
<sys/	|0
<sys/types	|0
<sys/types.h	|0
<sys/types.h>	|0
sys	|0
sys/	|0
sys/types	|0
sys/types.h	|0
sys/types.h>	|0
types	|1
types.h	|0
types.h>	|0
h	|1
h>	|0
#include	|1
include	|0
<time	|1
<time.h	|0
<time.h>	|0
time	|0
time.h	|0
time.h>	|0
h	|1
h>	|0
#include	|1
include	|0
"errno	|1
"errno.ext1	|0
"errno.ext1"	|0
errno	|0
errno.ext1	|0
errno.ext1"	|0
ext1	|1
ext1"	|0
/*	|1
*	|1
this	|1
function	|1
is	|1
blatently	|1
stolen	|1
from	|1
the	|1
kernel	|1
kernel.	|0
*	|1
see	|1
the	|1
dissertation	|1
in	|1
the	|1
comments	|1
preceding	|1
the	|1
*	|1
hrt2ts	|1
hrt2ts(	|0
hrt2ts()	|0
function	|1
in	|1
in:	|0
*	|1
uts	|1
uts/	|0
uts/common	|0
uts/common/	|0
uts/common/os	|0
uts/common/os/	|0
uts/common/os/timers	|0
uts/common/os/timers.c	|0
common	|1
common/	|0
common/os	|0
common/os/	|0
common/os/timers	|0
common/os/timers.c	|0
os	|1
os/	|0
os/timers	|0
os/timers.c	|0
timers	|1
timers.c	|0
c	|1
*/	|1
void	|1
hrt2ts	|1
hrt2ts(	|0
hrt2ts(hrtime_t	|0
hrtime_t	|1
hrt	|1
hrt,	|0
timespec_t	|1
*tsp	|1
*tsp)	|0
tsp	|0
tsp)	|0
{	|1
uint32_t	|1
sec	|1
sec,	|0
nsec	|1
nsec,	|0
tmp	|1
tmp;	|0
tmp	|1
=	|1
(uint32_t	|1
(uint32_t)	|0
(uint32_t)(	|0
(uint32_t)(hrt	|0
uint32_t	|0
uint32_t)	|0
uint32_t)(	|0
uint32_t)(hrt	|0
hrt	|1
>>	|1
30	|1
30)	|0
30);	|0
sec	|1
=	|1
tmp	|1
-	|1
(tmp	|1
tmp	|0
>>	|1
2	|1
2)	|0
2);	|0
sec	|1
=	|1
tmp	|1
-	|1
(sec	|1
sec	|0
>>	|1
5	|1
5)	|0
5);	|0
sec	|1
=	|1
tmp	|1
+	|1
(sec	|1
sec	|0
>>	|1
1	|1
1)	|0
1);	|0
sec	|1
=	|1
tmp	|1
-	|1
(sec	|1
sec	|0
>>	|1
6	|1
6)	|0
+	|1
7	|1
7;	|0
sec	|1
=	|1
tmp	|1
-	|1
(sec	|1
sec	|0
>>	|1
3	|1
3)	|0
3);	|0
sec	|1
=	|1
tmp	|1
+	|1
(sec	|1
sec	|0
>>	|1
1	|1
1)	|0
1);	|0
sec	|1
=	|1
tmp	|1
+	|1
(sec	|1
sec	|0
>>	|1
3	|1
3)	|0
3);	|0
sec	|1
=	|1
tmp	|1
+	|1
(sec	|1
sec	|0
>>	|1
4	|1
4)	|0
4);	|0
tmp	|1
=	|1
(sec	|1
sec	|0
<<	|1
7	|1
7)	|0
-	|1
sec	|1
-	|1
sec	|1
-	|1
sec	|1
sec;	|0
tmp	|1
=	|1
(tmp	|1
tmp	|0
<<	|1
7	|1
7)	|0
-	|1
tmp	|1
-	|1
tmp	|1
-	|1
tmp	|1
tmp;	|0
tmp	|1
=	|1
(tmp	|1
tmp	|0
<<	|1
7	|1
7)	|0
-	|1
tmp	|1
-	|1
tmp	|1
-	|1
tmp	|1
tmp;	|0
nsec	|1
=	|1
(uint32_t	|1
(uint32_t)	|0
(uint32_t)hrt	|0
uint32_t	|0
uint32_t)	|0
uint32_t)hrt	|0
hrt	|1
-	|1
(tmp	|1
tmp	|0
<<	|1
9	|1
9)	|0
9);	|0
while	|1
(nsec	|1
nsec	|0
>=	|1
nanosec	|1
nanosec)	|0
{	|1
nsec	|1
-=	|1
nanosec	|1
nanosec;	|0
sec	|1
sec++;	|0
}	|1
tsp	|1
tsp->	|0
tsp->tv_sec	|0
tv_sec	|1
=	|1
(time_t	|1
(time_t)	|0
(time_t)sec	|0
(time_t)sec;	|0
time_t	|0
time_t)	|0
time_t)sec	|0
time_t)sec;	|0
sec	|1
sec;	|0
tsp	|1
tsp->	|0
tsp->tv_nsec	|0
tv_nsec	|1
=	|1
nsec	|1
nsec;	|0
}	|1
/*	|1
*	|1
convert	|1
absolute	|1
time	|1
to	|1
relative	|1
time	|1
time.	|0
*	|1
all	|1
*timedwait	|1
*timedwait(	|0
*timedwait()	|0
timedwait	|0
timedwait(	|0
timedwait()	|0
system	|1
call	|1
traps	|1
expect	|1
relative	|1
time	|1
time.	|0
*/	|1
void	|1
abstime_to_reltime	|1
abstime_to_reltime(	|0
abstime_to_reltime(clockid_t	|0
clockid_t	|1
clock_id	|1
clock_id,	|0
const	|1
timespec_t	|1
*abstime	|1
*abstime,	|0
abstime	|0
abstime,	|0
timespec_t	|1
*reltime	|1
*reltime)	|0
reltime	|0
reltime)	|0
{	|1
extern	|1
int	|1
__clock_gettime	|1
__clock_gettime(	|0
__clock_gettime(clockid_t	|0
__clock_gettime(clockid_t,	|0
clockid_t	|1
clockid_t,	|0
timespec_t	|1
*)	|1
*);	|0
timespec_t	|1
now	|1
now;	|0
if	|1
(clock_id	|1
clock_id	|0
==	|1
clock_highres	|1
clock_highres)	|0
hrt2ts	|1
hrt2ts(	|0
hrt2ts(gethrtime	|0
hrt2ts(gethrtime(	|0
hrt2ts(gethrtime()	|0
hrt2ts(gethrtime(),	|0
gethrtime	|1
gethrtime(	|0
gethrtime()	|0
gethrtime(),	|0
&now	|1
&now)	|0
&now);	|0
now	|0
now)	|0
now);	|0
else	|1
(void	|1
(void)	|0
void	|0
void)	|0
__clock_gettime	|1
__clock_gettime(	|0
__clock_gettime(clock_id	|0
__clock_gettime(clock_id,	|0
clock_id	|1
clock_id,	|0
&now	|1
&now)	|0
&now);	|0
now	|0
now)	|0
now);	|0
if	|1
(abstime	|1
(abstime->	|0
(abstime->tv_nsec	|0
abstime	|0
abstime->	|0
abstime->tv_nsec	|0
tv_nsec	|1
>=	|1
now	|1
now.tv_nsec	|0
now.tv_nsec)	|0
tv_nsec	|1
tv_nsec)	|0
{	|1
reltime	|1
reltime->	|0
reltime->tv_sec	|0
tv_sec	|1
=	|1
abstime	|1
abstime->	|0
abstime->tv_sec	|0
tv_sec	|1
-	|1
now	|1
now.tv_sec	|0
now.tv_sec;	|0
tv_sec	|1
tv_sec;	|0
reltime	|1
reltime->	|0
reltime->tv_nsec	|0
tv_nsec	|1
=	|1
abstime	|1
abstime->	|0
abstime->tv_nsec	|0
tv_nsec	|1
-	|1
now	|1
now.tv_nsec	|0
now.tv_nsec;	|0
tv_nsec	|1
tv_nsec;	|0
}	|1
else	|1
{	|1
reltime	|1
reltime->	|0
reltime->tv_sec	|0
tv_sec	|1
=	|1
abstime	|1
abstime->	|0
abstime->tv_sec	|0
tv_sec	|1
-	|1
now	|1
now.tv_sec	|0
tv_sec	|1
-	|1
1	|1
1;	|0
reltime	|1
reltime->	|0
reltime->tv_nsec	|0
tv_nsec	|1
=	|1
abstime	|1
abstime->	|0
abstime->tv_nsec	|0
tv_nsec	|1
-	|1
now	|1
now.tv_nsec	|0
tv_nsec	|1
+	|1
nanosec	|1
nanosec;	|0
}	|1
/*	|1
*	|1
if	|1
the	|1
absolute	|1
time	|1
has	|1
already	|1
passed	|1
passed,	|0
*	|1
just	|1
set	|1
the	|1
relative	|1
time	|1
to	|1
zero	|1
zero.	|0
*/	|1
if	|1
(reltime	|1
(reltime->	|0
(reltime->tv_sec	|0
reltime	|0
reltime->	|0
reltime->tv_sec	|0
tv_sec	|1
<	|1
0	|1
0)	|0
{	|1
reltime	|1
reltime->	|0
reltime->tv_sec	|0
tv_sec	|1
=	|1
0	|1
0;	|0
reltime	|1
reltime->	|0
reltime->tv_nsec	|0
tv_nsec	|1
=	|1
0	|1
+	|1
0xffff	|1
-	|1
0xff	|1
-	|1
0xff00	|1
0xff00;	|0
}	|1
/*	|1
*	|1
if	|1
the	|1
specified	|1
absolute	|1
time	|1
has	|1
a	|1
bad	|1
nanoseconds	|1
value	|1
value,	|0
*	|1
assign	|1
it	|1
to	|1
the	|1
relative	|1
time	|1
value	|1
value.	|0
if	|1
the	|1
interface	|1
*	|1
attempts	|1
to	|1
sleep	|1
sleep,	|0
the	|1
bad	|1
value	|1
will	|1
be	|1
detected	|1
then	|1
then.	|0
*	|1
the	|1
susv3	|1
posix	|1
spec	|1
is	|1
very	|1
clear	|1
that	|1
such	|1
detection	|1
*	|1
should	|1
not	|1
happen	|1
until	|1
an	|1
attempt	|1
to	|1
sleep	|1
is	|1
made	|1
made.	|0
*/	|1
if	|1
((	|1
((ulong_t	|0
((ulong_t)	|0
((ulong_t)abstime	|0
((ulong_t)abstime->	|0
((ulong_t)abstime->tv_nsec	|0
ulong_t	|0
ulong_t)	|0
ulong_t)abstime	|0
ulong_t)abstime->	|0
ulong_t)abstime->tv_nsec	|0
abstime	|1
abstime->	|0
abstime->tv_nsec	|0
tv_nsec	|1
>=	|1
nanosec	|1
nanosec)	|0
reltime	|1
reltime->	|0
reltime->tv_nsec	|0
tv_nsec	|1
=	|1
abstime	|1
abstime->	|0
abstime->tv_nsec	|0
abstime->tv_nsec;	|0
tv_nsec	|1
tv_nsec;	|0
int	|1
dec	|1
=	|1
42	|1
42;	|0
int	|1
o	|1
=	|1
052	|1
052;	|0
int	|1
x	|1
=	|1
0x2a	|1
0x2a;	|0
int	|1
x	|1
=	|1
0x2a	|1
0x2a;	|0
unsigned	|1
long	|1
long	|1
ull	|1
=	|1
12345678901234567890ull	|1
12345678901234567890ull;	|0
unsigned	|1
long	|1
u	|1
=	|1
12345678901234567890u	|1
12345678901234567890u;	|0
double	|1
d	|1
=	|1
0x1	|1
0x1.2p3	|0
0x1.2p3;	|0
2p3	|1
2p3;	|0
/*	|1
hex	|1
frac	|1
1	|1
1.2	|0
1.2(	|0
1.2(dec	|0
2	|1
2(	|0
2(dec	|0
dec	|1
1	|1
1.125	|0
1.125)	|0
125	|1
125)	|0
scaled	|1
by	|1
2	|1
2^	|0
2^3	|0
2^3,	|0
3	|1
3,	|0
i	|1
i.e	|0
i.e.	|0
e	|1
e.	|0
9	|1
9.0	|0
9.0*/	|0
0	|1
0*/	|0
d	|1
=	|1
1	|1
1.2e3	|0
1.2e3;	|0
2e3	|1
2e3;	|0
d	|1
=	|1
1e0	|1
1e0;	|0
d	|1
=	|1
1	|1
1.;	|0
d	|1
=	|1
.1	|1
.1;	|0
1	|0
1;	|0
d	|1
=	|1
15	|1
15.0	|0
15.0;	|0
0	|1
0;	|0
d	|1
=	|1
0x1	|1
0x1.ep	|0
0x1.ep+	|0
0x1.ep+3	|0
0x1.ep+3;	|0
ep	|1
ep+	|0
ep+3	|0
ep+3;	|0
3	|1
3;	|0
d	|1
=	|1
2	|1
2.0e	|0
2.0e+	|0
2.0e+308	|0
2.0e+308;	|0
0e	|1
0e+	|0
0e+308	|0
0e+308;	|0
308	|1
308;	|0
d	|1
=	|1
1	|1
1.0e	|0
1.0e-	|0
1.0e-324	|0
1.0e-324;	|0
0e	|1
0e-	|0
0e-324	|0
0e-324;	|0
324	|1
324;	|0
d	|1
=	|1
-1	|1
-1.0e	|0
-1.0e-	|0
-1.0e-324	|0
-1.0e-324;	|0
1	|0
1.0e	|0
1.0e-	|0
1.0e-324	|0
1.0e-324;	|0
0e	|1
0e-	|0
0e-324	|0
0e-324;	|0
324	|1
324;	|0
d	|1
=	|1
-2	|1
-2.0e	|0
-2.0e+	|0
-2.0e+308	|0
-2.0e+308;	|0
2	|0
2.0e	|0
2.0e+	|0
2.0e+308	|0
2.0e+308;	|0
0e	|1
0e+	|0
0e+308	|0
0e+308;	|0
308	|1
308;	|0
}	|1
/*	|1
/*http	|0
/*http://	|0
/*http://example	|0
/*http://example.com	|0
/*http://example.com*/	|0
http	|0
http://	|0
http://example	|0
http://example.com	|0
http://example.com*/	|0
example	|1
example.com	|0
example.com*/	|0
com	|1
com*/	|0
